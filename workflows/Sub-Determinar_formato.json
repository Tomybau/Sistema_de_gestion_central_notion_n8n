{
  "active": false,
  "connections": {
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "JSON_registro",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "confianza_formato?": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis1": {
      "main": [
        [
          {
            "node": "Send message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "JSON_registro": {
      "main": [
        [
          {
            "node": "confianza_formato?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "obtener_redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obtener_redis": {
      "main": [
        [
          {
            "node": "redis_a_JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "redis_a_JSON": {
      "main": [
        [
          {
            "node": "contador_intentos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "contador_intentos": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "contador_intentos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-10-13T22:27:14.235Z",
  "id": "sXHiDmFQ3LXFv5si",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Sub-Determinar_formato",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('When Executed by Another Workflow').item.json.input }}",
        "messages": {
          "messageValues": [
            {
              "message": "=Eres un asistente de clasificación.  \nTu tarea es analizar un texto breve y determinar si describe una:  \n\n1. Nota rápida o nota → pensamiento breve, recordatorio sin estructura ni fecha. \n2. Idea → concepto o propuesta que podría desarrollarse más adelante. \n3. Tarea → acción concreta que debe realizarse, normalmente con fecha, empresa o responsable. \n4. Evento → algo que ocurre en una fecha y hora específicas.  \n\nSi la persona especifica en su discurso quiero anotar, tengo una idea, agendame un evento, deberas colocarlo donde corresponda, sin darle muchas vueltas mas  \nComienza asignando 0.25 de confianza a cada categoría.\nSi detectas indicios fuertes de una categoría (por ejemplo, fecha → evento, verbo de acción → tarea, frase tipo “tengo una idea” → idea), aumenta su ponderación y reduce las otras proporcionalmente para mantener la suma total = 1.\nEl resultado sera siempre el evento con la ponderacion mas alta\n\nDevuelve la respuesta en JSON con las claves de los ejemplos:  \n\nEjemplo de respuesta\n{\n  \"nota_rapida\": 0.10,\n  \"idea\": 0.20,\n  \"tarea\": 0.15,\n  \"evento\": 0.55,\n  \"resultado\": {\n    \"tipo\": \"evento\", \n    \"confianza\": 0.55\n  }\n}\n\nEjemplo:\nTexto: “Reunión con Luis el martes a las 10 para revisar Botekia.”\nResultado: Evento (0.70)\nRazon: Tiene día y hora específicas, describe algo que ocurrirá en un momento concreto.\n\nEjemplo:\nTexto: “Pensar un nombre para el nuevo asistente interno.”\nResultado: Idea (0.60)\nRazon: No hay acción inmediata ni fecha, es un concepto a desarrollar más adelante.\n\nEjemplo:\nTexto: “Verificar si la impresora 3D está funcionando.”\nResultado: Tarea (0.65)\nRazon: Acción directa y concreta que alguien debe realizar.\n\nEjemplo:\nTexto: “Tengo una idea para mejorar la comunicación interna.”\nResultado: Idea (0.70)\nRazon: Expone una propuesta o concepto que puede desarrollarse, no una acción inmediata.\n\nEjemplo:\nTexto: “Evento.”\nResultado: evento (0.97)\nRazon: Se selecciono que tipo de registro se queria.\n\nEjemplo:\nTexto: “Nota”\nResultado: nota_rapida (0.97)\nRazon: Se selecciono que tipo de registro se queria.\n"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        64,
        112
      ],
      "id": "a40e1a7f-1cbd-4938-8864-27d01cfd4d35",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        64,
        288
      ],
      "id": "f487dbe2-3667-4938-b8fa-c82e39af05ff",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "fDpifv2qqDic1ocl",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9f49d5ab-164b-4c59-b6d3-51282c500ea9",
              "leftValue": "={{ $json.resultado.confianza }}",
              "rightValue": 0.6,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        528,
        112
      ],
      "id": "dc94be27-e680-482a-9ea6-9fccd230b950",
      "name": "confianza_formato?"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('When Executed by Another Workflow').item.json.chat_id }}",
        "value": "={\n  \"Estado\": \"falta_formato\",\n  \"Entradas\": [\n    {\n      \"Entrada_inicial\": \"{{ $('redis_a_JSON').item.json.Entradas[0].Entrada_inicial }}\",\n      \"Entrada_registro\": \"{{ $('redis_a_JSON').item.json.Entradas[0].Entrada_registro }}\",\n      \"Entrada_empresa\": \"{{ $('redis_a_JSON').item.json.Entradas[0].Entrada_empresa }}\"\n    }\n  ],\n  \"Empresa\": [\n    {\n      \"id\": \"{{ $('redis_a_JSON').item.json.Empresa[0].id }}\",\n      \"Nombre\": \"{{ $('redis_a_JSON').item.json.Empresa[0].Nombre }}\",\n      \"Confianza_empresa\": {{ $('redis_a_JSON').item.json.Empresa[0].Confianza_empresa }}\n    }\n  ],\n  \"Registro\": [\n    {\n      \"Nombre\": \"{{ $('JSON_registro').item.json.resultado.tipo }}\",\n      \"Confianza_registro\": {{ $('JSON_registro').item.json.resultado.confianza }},\n      \"Fecha\": \"{{ $('redis_a_JSON').first().json.Agente[0].Fecha }}\",\n      \"Fecha_inicio\": \"{{ $('redis_a_JSON').first().json.Agente[0].Fecha_inicio || \"\"}}\",\n      \"Fecha_fin\": \"{{ $('redis_a_JSON').first().json.Agente[0].Fecha_fin || \"\"}}\",\n      \"Departamento\":\"{{ $('redis_a_JSON').first().json.Agente[0].Departamento }}\",\n      \"Prioridad\":\"{{ $('redis_a_JSON').first().json.Agente[0].Prioridad }}\"\n    }\n  ]\n}\n",
        "expire": true,
        "ttl": 600
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        848,
        256
      ],
      "id": "0c40ee12-8546-448a-8128-b7bc1d78adc4",
      "name": "Redis1",
      "credentials": {
        "redis": {
          "id": "FCP6hT01xV80XIPs",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const raw = $json[\"text\"];\nlet data;\n\ntry {\n  data = JSON.parse(raw);\n} catch (e) {\n  data = JSON.parse(raw.replace(/'/g, '\"'));\n}\n\nreturn data;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        352,
        112
      ],
      "id": "205a8644-59ca-4638-a6e2-eb4571667aa6",
      "name": "JSON_registro"
    },
    {
      "parameters": {
        "content": "## Determinar Formato\n\n",
        "height": 544,
        "width": 1696,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -720,
        16
      ],
      "typeVersion": 1,
      "id": "6a9de96b-0c98-4505-857a-7cad02b151ba",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "810851532108753",
        "recipientPhoneNumber": "={{ $('When Executed by Another Workflow').first().json.wa_id }}",
        "textBody": "Perfecto, ¿querés que lo guarde como nota, idea, tarea o evento?",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        1008,
        256
      ],
      "id": "1cb86fe1-ebc0-4673-b57e-94248128e295",
      "name": "Send message",
      "webhookId": "cfe8ca01-d40b-457d-ae0e-2cdbd406d588",
      "credentials": {
        "whatsAppApi": {
          "id": "pV4vxi8821Z8UsSL",
          "name": "WhatsApp account"
        }
      }
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "chat_id"
            },
            {
              "name": "input"
            },
            {
              "name": "wa_id"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -688,
        112
      ],
      "id": "fda9a2b0-4ffe-45e6-b9e8-8b39787e1b52",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('When Executed by Another Workflow').item.json.chat_id }}",
        "value": "={\n  \"Estado\": \"formato_obtenido\",\n  \"Entradas\": [\n    {\n      \"Entrada_inicial\": \"{{ $('redis_a_JSON').item.json.Entradas[0].Entrada_inicial }}\",\n      \"Entrada_registro\": \"{{ $('When Executed by Another Workflow').item.json.input }}\",\n      \"Entrada_empresa\": \"{{ $('redis_a_JSON').item.json.Entradas[0].Entrada_empresa }}\"\n    }\n  ],\n  \"Empresa\": [\n    {\n      \"id\": \"{{ $('redis_a_JSON').item.json.Empresa[0].id }}\",\n      \"Nombre\": \"{{ $('redis_a_JSON').item.json.Empresa[0].Nombre }}\",\n      \"Confianza_empresa\": {{ $('redis_a_JSON').item.json.Empresa[0].Confianza_empresa }}\n    }\n  ],\n  \"Registro\": [\n    {\n      \"Nombre\": \"{{ $('JSON_registro').item.json.resultado.tipo }}\",\n      \"Confianza_registro\": {{ $('JSON_registro').item.json.resultado.confianza }},\n      \"Fecha\": \"{{ $('redis_a_JSON').first().json.Agente[0].Fecha }}\",\n      \"Departamento\":\"{{ $('redis_a_JSON').first().json.Agente[0].Departamento }}\",\n      \"Prioridad\":\"{{ $('redis_a_JSON').first().json.Agente[0].Prioridad }}\"\n    }\n  ],\n    \"Agente\": [\n      {\n        \"Titulo\": \"{{ $('redis_a_JSON').item.json.Agente[0].Titulo }}\",\n        \"Descripción\": \"{{ $('redis_a_JSON').item.json.Agente[0]['Descripción'] }}\",\n        \"Fecha\": \"{{ $('redis_a_JSON').item.json.Agente[0].Fecha }}\",\n        \"Fecha_inicio\": \"{{ $('redis_a_JSON').first().json.Agente[0].Fecha_inicio }}\",\n        \"Fecha_fin\": \"{{ $('redis_a_JSON').first().json.Agente[0].Fecha_fin }}\",\n        \"Departamento\": \"{{ $('redis_a_JSON').item.json.Agente[0].Departamento }}\",\n        \"Prioridad\": \"{{ $('redis_a_JSON').item.json.Agente[0].Prioridad }}\"\n      }\n    ]\n}\n",
        "expire": true,
        "ttl": 600
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        848,
        96
      ],
      "id": "04b3d9e7-0da5-493c-80c7-cefde12e56fd",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "FCP6hT01xV80XIPs",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "data",
        "key": "={{ $json.chat_id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -496,
        112
      ],
      "id": "c111a03d-5d9e-4fd5-bad4-07e66444aee6",
      "name": "obtener_redis",
      "credentials": {
        "redis": {
          "id": "FCP6hT01xV80XIPs",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const rawData = $json[\"data\"];\nlet parsedData;\n\ntry {\n  let text = rawData;\n\n  // Si no tiene comillas escapadas (pseudo JSON), las agregamos manualmente\n  if (typeof text === \"string\" && text.includes('{') && !text.includes('\\\\\"')) {\n    // Limpieza básica de saltos de línea y espacios\n    text = text.replace(/\\n/g, '').replace(/\\r/g, '').trim();\n  }\n\n  // Intentamos el primer parseo\n  let firstParse = typeof text === \"string\" ? JSON.parse(text) : text;\n\n  // Si aún devuelve string (doblemente serializado), hacemos un segundo parse\n  if (typeof firstParse === \"string\") {\n    parsedData = JSON.parse(firstParse);\n  } else {\n    parsedData = firstParse;\n  }\n\n} catch (error) {\n  parsedData = {\n    error: \"No se pudo parsear el JSON desde obtener_redis\",\n    raw: rawData,\n    detalle: error.message\n  };\n}\n\nreturn [{ json: parsedData }];\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -304,
        112
      ],
      "id": "f5c35e44-4dc2-471b-b07c-1ce698bfb301",
      "name": "redis_a_JSON"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8257d544-6daa-45fb-b73d-4024bd16e17c",
              "name": "intentos",
              "value": "={{ $json.intentos || 0 }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -112,
        112
      ],
      "id": "977e28c9-fb05-4bc0-9603-e9b2965087dd",
      "name": "contador_intentos"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "53dfc866-81f4-479c-8a3d-1108ef54faad",
              "leftValue": "={{ $('contador_intentos').item.json.intentos }}",
              "rightValue": 1,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        688,
        272
      ],
      "id": "105af32f-8825-4355-9c78-3944c798a6dd",
      "name": "If"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4e1c6553-fdba-45e0-9cad-6ad884f0406f",
              "name": "intentos",
              "value": "={{ $('contador_intentos').item.json.intentos + 1 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        848,
        416
      ],
      "id": "f8912861-7b09-4b7c-bd08-82e39656fca5",
      "name": "Edit Fields"
    }
  ],
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "json": {
          "chat_id": "810851532108753",
          "input": "Necesito que me agende una reunión con lucas",
          "wa_id": "5493544641683"
        }
      }
    ]
  },
  "repo_name": "Sistema_de_gestion_central_notion_n8n",
  "repo_owner": "Tomybau",
  "repo_path": "workflows/",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-10-13T22:27:14.235Z",
      "updatedAt": "2025-10-13T22:27:14.235Z",
      "role": "workflow:owner",
      "workflowId": "sXHiDmFQ3LXFv5si",
      "projectId": "5ieVStNAHt1Bb6Tr"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-10-15T23:16:12.194Z",
      "updatedAt": "2025-10-15T23:16:12.194Z",
      "id": "NHMeAPMIT8hmJz47",
      "name": "Notion"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-10-16T14:27:50.342Z",
  "versionId": "2a33eb62-ced0-4b84-8bf3-adbd12e0efd5"
}