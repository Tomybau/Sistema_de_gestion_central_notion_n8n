{
  "active": true,
  "connections": {
    "obtener_tareas_vencidas": {
      "main": [
        [
          {
            "node": "limpieza_datos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "limpieza_datos": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "armado_informe": {
      "main": [
        [
          {
            "node": "informe_tareas_vencidas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obtener_estado_boton": {
      "main": [
        [
          {
            "node": "boton_encendido? ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obtener_departamentos_retrasados": {
      "main": [
        [
          {
            "node": "limpieza_datos2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "limpieza_datos2": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "armado_informe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "obtener_estado_boton",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "boton_encendido? ": {
      "main": [
        [
          {
            "node": "obtener_tareas_vencidas",
            "type": "main",
            "index": 0
          },
          {
            "node": "obtener_departamentos_retrasados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-10-15T20:22:57.539Z",
  "id": "N8ooYpU2YahB1VA3",
  "isArchived": false,
  "meta": null,
  "name": "Notion_tareas_vencidas",
  "nodes": [
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "27d272c9-f6ae-80a8-9e6b-d6d1c3c625a4",
          "mode": "list",
          "cachedResultName": "Tareas",
          "cachedResultUrl": "https://www.notion.so/27d272c9f6ae80a89e6bd6d1c3c625a4"
        },
        "returnAll": true,
        "filterType": "manual",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "key": "Fecha |date",
              "condition": "before",
              "date": "={{ $('Schedule Trigger').item.json.timestamp }}"
            },
            {
              "key": "Estado|status",
              "condition": "does_not_equal",
              "statusValue": "Listo"
            },
            {
              "key": "Fecha |date",
              "condition": "after",
              "date": "={{ \n  new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString() \n}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        528,
        112
      ],
      "id": "0b1c0402-ae63-41e3-a403-23208b5e3f60",
      "name": "obtener_tareas_vencidas",
      "credentials": {
        "notionApi": {
          "id": "fyQ0RqcmHkhWZLsD",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Input: m√∫ltiples items con la estructura que mostraste\n// Output: un solo item con la estructura agrupada\n\nconst input = items.map(i => i.json);\n\nconst output = {};\n\nfor (const el of input) {\n  const empresa = el.property_empresa || \"Sin empresa\";\n  const departamento = (el.property_departamento && el.property_departamento[0]) || \"Sin departamento\";\n  \n  if (!output[empresa]) output[empresa] = {};\n  if (!output[empresa][departamento]) output[empresa][departamento] = [];\n\n  output[empresa][departamento].push({\n    nombre: el.property_nombre || el.name || \"Sin nombre\",\n    fecha: el.property_fecha?.start || null,\n    prioridad: el.property_prioridad || null,\n    estado: el.property_estado || \"Sin estado\"\n  });\n}\n\n// Retornamos un √∫nico item con el JSON organizado\nreturn [\n  {\n    json: output\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        736,
        112
      ],
      "id": "084883ba-4e71-436e-a096-385ce80de075",
      "name": "limpieza_datos"
    },
    {
      "parameters": {
        "jsCode": "// Input: el JSON agrupado (como el que mostraste)\n// Output: un mensaje formateado para enviar por WhatsApp\n\nconst data = items[0].json; // Tu estructura agrupada\n\nlet message = \"*üìã REPORTE DIARIO - TAREAS PENDIENTES*\\n\";\n\nmessage += `\\n`;\n\nfor (const empresa in data) {\n  message += `üè¢ *${empresa.replace(/^@/, '')}*\\n`;\n\n  \n  const departamentos = data[empresa];\n  \n  for (const depto in departamentos) {\n    message += `     *Depto:* _${depto}_\\n`;\n    \n    for (const tarea of departamentos[depto]) {\n      message += `   - ${tarea.nombre} (${tarea.estado || \"Sin estado\"}) [${tarea.prioridad || \"Sin prioridad\"}]\\n`;\n    }\n  }\n  \n  message += `\\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\\n\\n`; \n}\n\nreturn [\n  {\n    json: {\n      whatsapp_message: message.trim()\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1136,
        240
      ],
      "id": "5518ef69-6328-4ffa-9dc8-347016d26b57",
      "name": "armado_informe"
    },
    {
      "parameters": {
        "content": "## Enviar recordatorio tareas vencidas\n",
        "height": 496,
        "width": 1696,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -176,
        16
      ],
      "typeVersion": 1,
      "id": "a3182e48-ed6e-4b31-afff-28a9ec7958fc",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "get",
        "pageId": {
          "__rl": true,
          "value": "https://www.notion.so/Recordatorio-tareas-vencidas-286272c9f6ae80bb9a6afadb94fbd860",
          "mode": "url"
        }
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        64,
        272
      ],
      "id": "3cd80049-11fb-40a1-b3b7-227b597ff8ca",
      "name": "obtener_estado_boton",
      "credentials": {
        "notionApi": {
          "id": "fyQ0RqcmHkhWZLsD",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "27d272c9-f6ae-80a8-9e6b-d6d1c3c625a4",
          "mode": "list",
          "cachedResultName": "Tareas",
          "cachedResultUrl": "https://www.notion.so/27d272c9f6ae80a89e6bd6d1c3c625a4"
        },
        "returnAll": true,
        "filterType": "manual",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "key": "Fecha |date",
              "condition": "before",
              "date": "={{ $('Schedule Trigger').item.json.timestamp }}"
            },
            {
              "key": "Estado|status",
              "condition": "does_not_equal",
              "statusValue": "Listo"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        528,
        320
      ],
      "id": "7d8c135b-0703-4871-b7f2-77a19a5521a3",
      "name": "obtener_departamentos_retrasados",
      "credentials": {
        "notionApi": {
          "id": "fyQ0RqcmHkhWZLsD",
          "name": "Notion account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "const input = items.map(i => i.json);\nconst output = {};\n\n// Fecha actual (sin horas)\nconst hoy = new Date();\nhoy.setHours(0, 0, 0, 0);\n\nfor (const el of input) {\n  const empresa = el.property_empresa || \"Sin empresa\";\n  const departamento = (el.property_departamento && el.property_departamento[0]) || \"Sin departamento\";\n  const fechaStr = el.property_fecha?.start || null;\n  const estado = el.property_estado || \"Sin estado\";\n\n  // Validar si la tarea est√° retrasada\n  let retrasada = false;\n  if (fechaStr) {\n    const fechaTarea = new Date(fechaStr);\n    if (fechaTarea < hoy && estado.toLowerCase() !== \"listo\") {\n      retrasada = true;\n    }\n  }\n\n  // Si no est√° retrasada, no la contamos\n  if (!retrasada) continue;\n\n  // Inicializar estructura\n  if (!output[empresa]) output[empresa] = {};\n  if (!output[empresa][departamento]) output[empresa][departamento] = 0;\n\n  // Sumar una tarea retrasada\n  output[empresa][departamento]++;\n}\n\n// Retornar resultado agrupado\nreturn [{ json: output }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        736,
        320
      ],
      "id": "a9e84d7d-8d0c-472b-8cb3-e2d95c802343",
      "name": "limpieza_datos2",
      "disabled": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        944,
        240
      ],
      "id": "94219ae4-1918-4893-9c05-999d03acc83c",
      "name": "Merge2",
      "disabled": true
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                1,
                2,
                3,
                4,
                5
              ],
              "triggerAtHour": 21
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -128,
        272
      ],
      "id": "eb503f06-de48-4d15-af3d-01e046b6c1fb",
      "name": "Schedule Trigger1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c3b49dcb-9d56-4c6c-9d89-2eab4973e2ce",
              "leftValue": "={{ $json.property_activar }}",
              "rightValue": "={{ $json.property_activar }}",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        256,
        272
      ],
      "id": "8d0c5a18-c104-41cf-bbd0-a81738f0de54",
      "name": "boton_encendido? "
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "810851532108753",
        "recipientPhoneNumber": "+5493544641683",
        "textBody": "={{ $json.whatsapp_message }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        1344,
        240
      ],
      "id": "484be9e6-5266-438b-9cd3-fa7663d17466",
      "name": "informe_tareas_vencidas",
      "webhookId": "2bc43fd9-469b-466c-bd43-fe09fe49f702",
      "credentials": {
        "whatsAppApi": {
          "id": "pV4vxi8821Z8UsSL",
          "name": "WhatsApp account"
        }
      }
    }
  ],
  "pinData": {},
  "repo_name": "Sistema_de_gestion_central_notion_n8n",
  "repo_owner": "Tomybau",
  "repo_path": "workflows/",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-10-15T20:22:57.539Z",
      "updatedAt": "2025-10-15T20:22:57.539Z",
      "role": "workflow:owner",
      "workflowId": "N8ooYpU2YahB1VA3",
      "projectId": "5ieVStNAHt1Bb6Tr"
    }
  ],
  "staticData": {
    "node:Schedule Trigger1": {
      "recurrenceRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2025-10-15T23:16:12.194Z",
      "updatedAt": "2025-10-15T23:16:12.194Z",
      "id": "NHMeAPMIT8hmJz47",
      "name": "Notion"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-10-15T23:16:47.126Z",
  "versionId": "533e5980-48d3-43d3-ab27-372409f15ecf"
}